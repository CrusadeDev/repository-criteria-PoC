<?php

declare(strict_types=1);

namespace App\User\UseCases\AddSysAdminUserUsingAdminPanel;

use App\User\Repository\FindUser\FindUserCriteria;
use App\User\Repository\UserRepositoryDoctrine;
use App\User\User;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class AddUserServiceDoctrineTest extends KernelTestCase
{
    public function test_handle_shouldThrowExceptionIfUserExists(): void
    {
        $id = 1;
        $this->addUserToRepository($id);
        $this->expectException(\Error::class);
        /** @var UserRepositoryDoctrine $repo */
        $repo = self::getContainer()->get(UserRepositoryDoctrine::class);
        $service = new AddUserService($repo);
        $service->handle($id);
    }

    /**
     * @throws \Exception
     */
    public function test_handle_shouldSaveUser_WhenDoesNotExists(): void
    {
        $id = 1;
        /** @var UserRepositoryDoctrine $repo */
        $repo = self::getContainer()->get(UserRepositoryDoctrine::class);
        $service = new AddUserService($repo);
        $service->handle($id);

        $result = $repo->find(new FindUserCriteria($id));

        self::assertNotNull($result);
    }

    private function addUserToRepository(int $id): void
    {
        self::getContainer()->get(UserRepositoryDoctrine::class)->save(new User($id));
    }

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        /** @var EntityManagerInterface $em */
        $em = self::getContainer()->get(EntityManagerInterface::class);
        $em->beginTransaction();
    }

    protected function tearDown(): void
    {
        /** @var EntityManagerInterface $em */
        $em = self::getContainer()->get(EntityManagerInterface::class);
        $em->rollback();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}